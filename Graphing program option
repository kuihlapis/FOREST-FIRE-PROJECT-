import fire_functions as ff
import numpy as np
import matplotlib.pyplot as plt

# Create arrays containing all grid sizes and tree densities
L_values = [20, 30, 40, 50, 60, 70]  # Grid sizes
p_values = np.linspace(0, 1, 100)  # Tree density range

# For all grid sizes
for L in L_values:
    mean_durations = []

    for p in p_values: # and all densities
        durations = []
        for ran in range(100):  # Run 100  burn simulations for each p
            grid = ff.ran_grid(L, p)
            time, final = ff.Burn(grid, L)
            durations.append(time) #add burn time to an array

        average_time = np.mean(durations) # get the mean of all values 
        mean_durations.append(average_time) # add to array for graphing

    # Find the maximum average burn time
    max_duration = max(mean_durations)
    peak_p = p_values[mean_durations.index(max_duration)]
    print(f"For L={L} -> p = {peak_p:.2f}, max duration = {max_duration:.2f}")

    # Plot the curve for this L
    plt.plot(p_values, mean_durations, label = f'L = {L}')

# Show the final plot with legend, title, grid and labels
plt.xlabel("Tree density (p)")
plt.ylabel("Mean fire duration")
plt.title("Mean Fire Duration vs Tree Density (p)")
plt.legend()
plt.grid()
plt.show()
